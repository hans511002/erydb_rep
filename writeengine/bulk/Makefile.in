# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2014 EryDB, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 of
# the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.

# $Id: Makefile.am 864 2009-04-02 19:22:49Z rdempsey $


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = cpimport.bin$(EXEEXT)
subdir = writeengine/bulk
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/compilerflags.m4 \
	$(top_srcdir)/m4/functions.m4 $(top_srcdir)/m4/install.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libwe_bulk_a_AR = $(AR) $(ARFLAGS)
libwe_bulk_a_LIBADD =
am_libwe_bulk_a_OBJECTS = libwe_bulk_a-we_brmreporter.$(OBJEXT) \
	libwe_bulk_a-we_bulkload.$(OBJEXT) \
	libwe_bulk_a-we_bulkloadbuffer.$(OBJEXT) \
	libwe_bulk_a-we_bulkstatus.$(OBJEXT) \
	libwe_bulk_a-we_colopbulk.$(OBJEXT) \
	libwe_bulk_a-we_colbuf.$(OBJEXT) \
	libwe_bulk_a-we_colbufcompressed.$(OBJEXT) \
	libwe_bulk_a-we_colbufmgr.$(OBJEXT) \
	libwe_bulk_a-we_colbufmgrdctnry.$(OBJEXT) \
	libwe_bulk_a-we_colbufsec.$(OBJEXT) \
	libwe_bulk_a-we_colextinf.$(OBJEXT) \
	libwe_bulk_a-we_columninfo.$(OBJEXT) \
	libwe_bulk_a-we_columninfocompressed.$(OBJEXT) \
	libwe_bulk_a-we_columnautoinc.$(OBJEXT) \
	libwe_bulk_a-we_extentstripealloc.$(OBJEXT) \
	libwe_bulk_a-we_tableinfo.$(OBJEXT) \
	libwe_bulk_a-we_tempxmlgendata.$(OBJEXT) \
	libwe_bulk_a-we_workers.$(OBJEXT)
libwe_bulk_a_OBJECTS = $(am_libwe_bulk_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_cpimport_bin_OBJECTS = cpimport_bin-cpimport.$(OBJEXT)
cpimport_bin_OBJECTS = $(am_cpimport_bin_OBJECTS)
cpimport_bin_DEPENDENCIES = libwe_bulk.a ../xml/libwe_xml.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libwe_bulk_a_SOURCES) $(cpimport_bin_SOURCES)
DIST_SOURCES = $(libwe_bulk_a_SOURCES) $(cpimport_bin_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
YACC = @YACC@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
etcdir = @etcdir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
erydb_brm_libs = @erydb_brm_libs@
erydb_cflags = @erydb_cflags@
erydb_common_includes = @erydb_common_includes@
erydb_common_ldflags = @erydb_common_ldflags@
erydb_common_libs = @erydb_common_libs@
erydb_cppflags = @erydb_cppflags@
erydb_cxxflags = @erydb_cxxflags@
erydb_exec_libs = @erydb_exec_libs@
erydb_ldflags = @erydb_ldflags@
erydb_oam_libs = @erydb_oam_libs@
erydb_write_libs = @erydb_write_libs@
erydbinstall = @erydbinstall@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localdir = @localdir@
localstatedir = @localstatedir@
mandir = @mandir@
march_flags = @march_flags@
mibdir = @mibdir@
mkdir_p = @mkdir_p@
mysqldir = @mysqldir@
netsnmp_libs = @netsnmp_libs@
netsnmpagntdir = @netsnmpagntdir@
netsnmpdir = @netsnmpdir@
netsnmplibrdir = @netsnmplibrdir@
netsnmpmachdir = @netsnmpmachdir@
netsnmpsysdir = @netsnmpsysdir@
oldincludedir = @oldincludedir@
postdir = @postdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedir = @sharedir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
toolsdir = @toolsdir@
AM_CPPFLAGS = $(erydb_cppflags) $(erydb_common_includes)
AM_CFLAGS = $(erydb_cflags)
AM_CXXFLAGS = $(erydb_cxxflags)
AM_LDFLAGS = $(erydb_ldflags)
noinst_LIBRARIES = libwe_bulk.a
libwe_bulk_a_SOURCES = \
	we_brmreporter.cpp \
	we_bulkload.cpp \
	we_bulkloadbuffer.cpp \
	we_bulkstatus.cpp \
	we_colopbulk.cpp \
	we_colbuf.cpp \
	we_colbufcompressed.cpp \
	we_colbufmgr.cpp \
	we_colbufmgrdctnry.cpp \
	we_colbufsec.cpp \
	we_colextinf.cpp \
	we_columninfo.cpp \
	we_columninfocompressed.cpp \
	we_columnautoinc.cpp \
	we_extentstripealloc.cpp \
	we_tableinfo.cpp \
	we_tempxmlgendata.cpp \
	we_workers.cpp

libwe_bulk_a_CPPFLAGS = $(march_flags) -D_FILE_OFFSET_BITS=64 $(AM_CPPFLAGS)
cpimport_bin_SOURCES = cpimport.cpp
cpimport_bin_LDFLAGS = $(erydb_common_ldflags) $(erydb_write_libs) $(AM_LDFLAGS)
cpimport_bin_LDADD = libwe_bulk.a ../xml/libwe_xml.a
cpimport_bin_CXXFLAGS = $(march_flags) $(AM_CXXFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  writeengine/bulk/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  writeengine/bulk/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libwe_bulk.a: $(libwe_bulk_a_OBJECTS) $(libwe_bulk_a_DEPENDENCIES) 
	-rm -f libwe_bulk.a
	$(libwe_bulk_a_AR) libwe_bulk.a $(libwe_bulk_a_OBJECTS) $(libwe_bulk_a_LIBADD)
	$(RANLIB) libwe_bulk.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
cpimport.bin$(EXEEXT): $(cpimport_bin_OBJECTS) $(cpimport_bin_DEPENDENCIES) 
	@rm -f cpimport.bin$(EXEEXT)
	$(CXXLINK) $(cpimport_bin_LDFLAGS) $(cpimport_bin_OBJECTS) $(cpimport_bin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cpimport_bin-cpimport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_brmreporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_bulkload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colbuf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colbufsec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colextinf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_colopbulk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_columninfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_tableinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libwe_bulk_a-we_workers.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libwe_bulk_a-we_brmreporter.o: we_brmreporter.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_brmreporter.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Tpo" -c -o libwe_bulk_a-we_brmreporter.o `test -f 'we_brmreporter.cpp' || echo '$(srcdir)/'`we_brmreporter.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Tpo" "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_brmreporter.cpp' object='libwe_bulk_a-we_brmreporter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_brmreporter.o `test -f 'we_brmreporter.cpp' || echo '$(srcdir)/'`we_brmreporter.cpp

libwe_bulk_a-we_brmreporter.obj: we_brmreporter.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_brmreporter.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Tpo" -c -o libwe_bulk_a-we_brmreporter.obj `if test -f 'we_brmreporter.cpp'; then $(CYGPATH_W) 'we_brmreporter.cpp'; else $(CYGPATH_W) '$(srcdir)/we_brmreporter.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Tpo" "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_brmreporter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_brmreporter.cpp' object='libwe_bulk_a-we_brmreporter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_brmreporter.obj `if test -f 'we_brmreporter.cpp'; then $(CYGPATH_W) 'we_brmreporter.cpp'; else $(CYGPATH_W) '$(srcdir)/we_brmreporter.cpp'; fi`

libwe_bulk_a-we_bulkload.o: we_bulkload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_bulkload.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_bulkload.Tpo" -c -o libwe_bulk_a-we_bulkload.o `test -f 'we_bulkload.cpp' || echo '$(srcdir)/'`we_bulkload.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_bulkload.Tpo" "$(DEPDIR)/libwe_bulk_a-we_bulkload.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_bulkload.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_bulkload.cpp' object='libwe_bulk_a-we_bulkload.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_bulkload.o `test -f 'we_bulkload.cpp' || echo '$(srcdir)/'`we_bulkload.cpp

libwe_bulk_a-we_bulkload.obj: we_bulkload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_bulkload.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_bulkload.Tpo" -c -o libwe_bulk_a-we_bulkload.obj `if test -f 'we_bulkload.cpp'; then $(CYGPATH_W) 'we_bulkload.cpp'; else $(CYGPATH_W) '$(srcdir)/we_bulkload.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_bulkload.Tpo" "$(DEPDIR)/libwe_bulk_a-we_bulkload.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_bulkload.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_bulkload.cpp' object='libwe_bulk_a-we_bulkload.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_bulkload.obj `if test -f 'we_bulkload.cpp'; then $(CYGPATH_W) 'we_bulkload.cpp'; else $(CYGPATH_W) '$(srcdir)/we_bulkload.cpp'; fi`

libwe_bulk_a-we_bulkloadbuffer.o: we_bulkloadbuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_bulkloadbuffer.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Tpo" -c -o libwe_bulk_a-we_bulkloadbuffer.o `test -f 'we_bulkloadbuffer.cpp' || echo '$(srcdir)/'`we_bulkloadbuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Tpo" "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_bulkloadbuffer.cpp' object='libwe_bulk_a-we_bulkloadbuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_bulkloadbuffer.o `test -f 'we_bulkloadbuffer.cpp' || echo '$(srcdir)/'`we_bulkloadbuffer.cpp

libwe_bulk_a-we_bulkloadbuffer.obj: we_bulkloadbuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_bulkloadbuffer.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Tpo" -c -o libwe_bulk_a-we_bulkloadbuffer.obj `if test -f 'we_bulkloadbuffer.cpp'; then $(CYGPATH_W) 'we_bulkloadbuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/we_bulkloadbuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Tpo" "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_bulkloadbuffer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_bulkloadbuffer.cpp' object='libwe_bulk_a-we_bulkloadbuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_bulkloadbuffer.obj `if test -f 'we_bulkloadbuffer.cpp'; then $(CYGPATH_W) 'we_bulkloadbuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/we_bulkloadbuffer.cpp'; fi`

libwe_bulk_a-we_bulkstatus.o: we_bulkstatus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_bulkstatus.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Tpo" -c -o libwe_bulk_a-we_bulkstatus.o `test -f 'we_bulkstatus.cpp' || echo '$(srcdir)/'`we_bulkstatus.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Tpo" "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_bulkstatus.cpp' object='libwe_bulk_a-we_bulkstatus.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_bulkstatus.o `test -f 'we_bulkstatus.cpp' || echo '$(srcdir)/'`we_bulkstatus.cpp

libwe_bulk_a-we_bulkstatus.obj: we_bulkstatus.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_bulkstatus.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Tpo" -c -o libwe_bulk_a-we_bulkstatus.obj `if test -f 'we_bulkstatus.cpp'; then $(CYGPATH_W) 'we_bulkstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/we_bulkstatus.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Tpo" "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_bulkstatus.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_bulkstatus.cpp' object='libwe_bulk_a-we_bulkstatus.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_bulkstatus.obj `if test -f 'we_bulkstatus.cpp'; then $(CYGPATH_W) 'we_bulkstatus.cpp'; else $(CYGPATH_W) '$(srcdir)/we_bulkstatus.cpp'; fi`

libwe_bulk_a-we_colopbulk.o: we_colopbulk.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colopbulk.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Tpo" -c -o libwe_bulk_a-we_colopbulk.o `test -f 'we_colopbulk.cpp' || echo '$(srcdir)/'`we_colopbulk.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colopbulk.cpp' object='libwe_bulk_a-we_colopbulk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colopbulk.o `test -f 'we_colopbulk.cpp' || echo '$(srcdir)/'`we_colopbulk.cpp

libwe_bulk_a-we_colopbulk.obj: we_colopbulk.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colopbulk.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Tpo" -c -o libwe_bulk_a-we_colopbulk.obj `if test -f 'we_colopbulk.cpp'; then $(CYGPATH_W) 'we_colopbulk.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colopbulk.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colopbulk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colopbulk.cpp' object='libwe_bulk_a-we_colopbulk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colopbulk.obj `if test -f 'we_colopbulk.cpp'; then $(CYGPATH_W) 'we_colopbulk.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colopbulk.cpp'; fi`

libwe_bulk_a-we_colbuf.o: we_colbuf.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbuf.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbuf.Tpo" -c -o libwe_bulk_a-we_colbuf.o `test -f 'we_colbuf.cpp' || echo '$(srcdir)/'`we_colbuf.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbuf.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbuf.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbuf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbuf.cpp' object='libwe_bulk_a-we_colbuf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbuf.o `test -f 'we_colbuf.cpp' || echo '$(srcdir)/'`we_colbuf.cpp

libwe_bulk_a-we_colbuf.obj: we_colbuf.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbuf.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbuf.Tpo" -c -o libwe_bulk_a-we_colbuf.obj `if test -f 'we_colbuf.cpp'; then $(CYGPATH_W) 'we_colbuf.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbuf.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbuf.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbuf.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbuf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbuf.cpp' object='libwe_bulk_a-we_colbuf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbuf.obj `if test -f 'we_colbuf.cpp'; then $(CYGPATH_W) 'we_colbuf.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbuf.cpp'; fi`

libwe_bulk_a-we_colbufcompressed.o: we_colbufcompressed.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufcompressed.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Tpo" -c -o libwe_bulk_a-we_colbufcompressed.o `test -f 'we_colbufcompressed.cpp' || echo '$(srcdir)/'`we_colbufcompressed.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufcompressed.cpp' object='libwe_bulk_a-we_colbufcompressed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufcompressed.o `test -f 'we_colbufcompressed.cpp' || echo '$(srcdir)/'`we_colbufcompressed.cpp

libwe_bulk_a-we_colbufcompressed.obj: we_colbufcompressed.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufcompressed.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Tpo" -c -o libwe_bulk_a-we_colbufcompressed.obj `if test -f 'we_colbufcompressed.cpp'; then $(CYGPATH_W) 'we_colbufcompressed.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufcompressed.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufcompressed.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufcompressed.cpp' object='libwe_bulk_a-we_colbufcompressed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufcompressed.obj `if test -f 'we_colbufcompressed.cpp'; then $(CYGPATH_W) 'we_colbufcompressed.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufcompressed.cpp'; fi`

libwe_bulk_a-we_colbufmgr.o: we_colbufmgr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufmgr.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Tpo" -c -o libwe_bulk_a-we_colbufmgr.o `test -f 'we_colbufmgr.cpp' || echo '$(srcdir)/'`we_colbufmgr.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufmgr.cpp' object='libwe_bulk_a-we_colbufmgr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufmgr.o `test -f 'we_colbufmgr.cpp' || echo '$(srcdir)/'`we_colbufmgr.cpp

libwe_bulk_a-we_colbufmgr.obj: we_colbufmgr.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufmgr.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Tpo" -c -o libwe_bulk_a-we_colbufmgr.obj `if test -f 'we_colbufmgr.cpp'; then $(CYGPATH_W) 'we_colbufmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufmgr.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgr.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufmgr.cpp' object='libwe_bulk_a-we_colbufmgr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufmgr.obj `if test -f 'we_colbufmgr.cpp'; then $(CYGPATH_W) 'we_colbufmgr.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufmgr.cpp'; fi`

libwe_bulk_a-we_colbufmgrdctnry.o: we_colbufmgrdctnry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufmgrdctnry.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Tpo" -c -o libwe_bulk_a-we_colbufmgrdctnry.o `test -f 'we_colbufmgrdctnry.cpp' || echo '$(srcdir)/'`we_colbufmgrdctnry.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufmgrdctnry.cpp' object='libwe_bulk_a-we_colbufmgrdctnry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufmgrdctnry.o `test -f 'we_colbufmgrdctnry.cpp' || echo '$(srcdir)/'`we_colbufmgrdctnry.cpp

libwe_bulk_a-we_colbufmgrdctnry.obj: we_colbufmgrdctnry.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufmgrdctnry.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Tpo" -c -o libwe_bulk_a-we_colbufmgrdctnry.obj `if test -f 'we_colbufmgrdctnry.cpp'; then $(CYGPATH_W) 'we_colbufmgrdctnry.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufmgrdctnry.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufmgrdctnry.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufmgrdctnry.cpp' object='libwe_bulk_a-we_colbufmgrdctnry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufmgrdctnry.obj `if test -f 'we_colbufmgrdctnry.cpp'; then $(CYGPATH_W) 'we_colbufmgrdctnry.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufmgrdctnry.cpp'; fi`

libwe_bulk_a-we_colbufsec.o: we_colbufsec.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufsec.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Tpo" -c -o libwe_bulk_a-we_colbufsec.o `test -f 'we_colbufsec.cpp' || echo '$(srcdir)/'`we_colbufsec.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufsec.cpp' object='libwe_bulk_a-we_colbufsec.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufsec.o `test -f 'we_colbufsec.cpp' || echo '$(srcdir)/'`we_colbufsec.cpp

libwe_bulk_a-we_colbufsec.obj: we_colbufsec.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colbufsec.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Tpo" -c -o libwe_bulk_a-we_colbufsec.obj `if test -f 'we_colbufsec.cpp'; then $(CYGPATH_W) 'we_colbufsec.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufsec.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colbufsec.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colbufsec.cpp' object='libwe_bulk_a-we_colbufsec.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colbufsec.obj `if test -f 'we_colbufsec.cpp'; then $(CYGPATH_W) 'we_colbufsec.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colbufsec.cpp'; fi`

libwe_bulk_a-we_colextinf.o: we_colextinf.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colextinf.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colextinf.Tpo" -c -o libwe_bulk_a-we_colextinf.o `test -f 'we_colextinf.cpp' || echo '$(srcdir)/'`we_colextinf.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colextinf.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colextinf.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colextinf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colextinf.cpp' object='libwe_bulk_a-we_colextinf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colextinf.o `test -f 'we_colextinf.cpp' || echo '$(srcdir)/'`we_colextinf.cpp

libwe_bulk_a-we_colextinf.obj: we_colextinf.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_colextinf.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_colextinf.Tpo" -c -o libwe_bulk_a-we_colextinf.obj `if test -f 'we_colextinf.cpp'; then $(CYGPATH_W) 'we_colextinf.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colextinf.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_colextinf.Tpo" "$(DEPDIR)/libwe_bulk_a-we_colextinf.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_colextinf.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_colextinf.cpp' object='libwe_bulk_a-we_colextinf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_colextinf.obj `if test -f 'we_colextinf.cpp'; then $(CYGPATH_W) 'we_colextinf.cpp'; else $(CYGPATH_W) '$(srcdir)/we_colextinf.cpp'; fi`

libwe_bulk_a-we_columninfo.o: we_columninfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_columninfo.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_columninfo.Tpo" -c -o libwe_bulk_a-we_columninfo.o `test -f 'we_columninfo.cpp' || echo '$(srcdir)/'`we_columninfo.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_columninfo.Tpo" "$(DEPDIR)/libwe_bulk_a-we_columninfo.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_columninfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_columninfo.cpp' object='libwe_bulk_a-we_columninfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_columninfo.o `test -f 'we_columninfo.cpp' || echo '$(srcdir)/'`we_columninfo.cpp

libwe_bulk_a-we_columninfo.obj: we_columninfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_columninfo.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_columninfo.Tpo" -c -o libwe_bulk_a-we_columninfo.obj `if test -f 'we_columninfo.cpp'; then $(CYGPATH_W) 'we_columninfo.cpp'; else $(CYGPATH_W) '$(srcdir)/we_columninfo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_columninfo.Tpo" "$(DEPDIR)/libwe_bulk_a-we_columninfo.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_columninfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_columninfo.cpp' object='libwe_bulk_a-we_columninfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_columninfo.obj `if test -f 'we_columninfo.cpp'; then $(CYGPATH_W) 'we_columninfo.cpp'; else $(CYGPATH_W) '$(srcdir)/we_columninfo.cpp'; fi`

libwe_bulk_a-we_columninfocompressed.o: we_columninfocompressed.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_columninfocompressed.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Tpo" -c -o libwe_bulk_a-we_columninfocompressed.o `test -f 'we_columninfocompressed.cpp' || echo '$(srcdir)/'`we_columninfocompressed.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Tpo" "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_columninfocompressed.cpp' object='libwe_bulk_a-we_columninfocompressed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_columninfocompressed.o `test -f 'we_columninfocompressed.cpp' || echo '$(srcdir)/'`we_columninfocompressed.cpp

libwe_bulk_a-we_columninfocompressed.obj: we_columninfocompressed.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_columninfocompressed.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Tpo" -c -o libwe_bulk_a-we_columninfocompressed.obj `if test -f 'we_columninfocompressed.cpp'; then $(CYGPATH_W) 'we_columninfocompressed.cpp'; else $(CYGPATH_W) '$(srcdir)/we_columninfocompressed.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Tpo" "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_columninfocompressed.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_columninfocompressed.cpp' object='libwe_bulk_a-we_columninfocompressed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_columninfocompressed.obj `if test -f 'we_columninfocompressed.cpp'; then $(CYGPATH_W) 'we_columninfocompressed.cpp'; else $(CYGPATH_W) '$(srcdir)/we_columninfocompressed.cpp'; fi`

libwe_bulk_a-we_columnautoinc.o: we_columnautoinc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_columnautoinc.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Tpo" -c -o libwe_bulk_a-we_columnautoinc.o `test -f 'we_columnautoinc.cpp' || echo '$(srcdir)/'`we_columnautoinc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Tpo" "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_columnautoinc.cpp' object='libwe_bulk_a-we_columnautoinc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_columnautoinc.o `test -f 'we_columnautoinc.cpp' || echo '$(srcdir)/'`we_columnautoinc.cpp

libwe_bulk_a-we_columnautoinc.obj: we_columnautoinc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_columnautoinc.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Tpo" -c -o libwe_bulk_a-we_columnautoinc.obj `if test -f 'we_columnautoinc.cpp'; then $(CYGPATH_W) 'we_columnautoinc.cpp'; else $(CYGPATH_W) '$(srcdir)/we_columnautoinc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Tpo" "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_columnautoinc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_columnautoinc.cpp' object='libwe_bulk_a-we_columnautoinc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_columnautoinc.obj `if test -f 'we_columnautoinc.cpp'; then $(CYGPATH_W) 'we_columnautoinc.cpp'; else $(CYGPATH_W) '$(srcdir)/we_columnautoinc.cpp'; fi`

libwe_bulk_a-we_extentstripealloc.o: we_extentstripealloc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_extentstripealloc.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Tpo" -c -o libwe_bulk_a-we_extentstripealloc.o `test -f 'we_extentstripealloc.cpp' || echo '$(srcdir)/'`we_extentstripealloc.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Tpo" "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_extentstripealloc.cpp' object='libwe_bulk_a-we_extentstripealloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_extentstripealloc.o `test -f 'we_extentstripealloc.cpp' || echo '$(srcdir)/'`we_extentstripealloc.cpp

libwe_bulk_a-we_extentstripealloc.obj: we_extentstripealloc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_extentstripealloc.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Tpo" -c -o libwe_bulk_a-we_extentstripealloc.obj `if test -f 'we_extentstripealloc.cpp'; then $(CYGPATH_W) 'we_extentstripealloc.cpp'; else $(CYGPATH_W) '$(srcdir)/we_extentstripealloc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Tpo" "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_extentstripealloc.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_extentstripealloc.cpp' object='libwe_bulk_a-we_extentstripealloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_extentstripealloc.obj `if test -f 'we_extentstripealloc.cpp'; then $(CYGPATH_W) 'we_extentstripealloc.cpp'; else $(CYGPATH_W) '$(srcdir)/we_extentstripealloc.cpp'; fi`

libwe_bulk_a-we_tableinfo.o: we_tableinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_tableinfo.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Tpo" -c -o libwe_bulk_a-we_tableinfo.o `test -f 'we_tableinfo.cpp' || echo '$(srcdir)/'`we_tableinfo.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Tpo" "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_tableinfo.cpp' object='libwe_bulk_a-we_tableinfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_tableinfo.o `test -f 'we_tableinfo.cpp' || echo '$(srcdir)/'`we_tableinfo.cpp

libwe_bulk_a-we_tableinfo.obj: we_tableinfo.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_tableinfo.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Tpo" -c -o libwe_bulk_a-we_tableinfo.obj `if test -f 'we_tableinfo.cpp'; then $(CYGPATH_W) 'we_tableinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/we_tableinfo.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Tpo" "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_tableinfo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_tableinfo.cpp' object='libwe_bulk_a-we_tableinfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_tableinfo.obj `if test -f 'we_tableinfo.cpp'; then $(CYGPATH_W) 'we_tableinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/we_tableinfo.cpp'; fi`

libwe_bulk_a-we_tempxmlgendata.o: we_tempxmlgendata.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_tempxmlgendata.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Tpo" -c -o libwe_bulk_a-we_tempxmlgendata.o `test -f 'we_tempxmlgendata.cpp' || echo '$(srcdir)/'`we_tempxmlgendata.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Tpo" "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_tempxmlgendata.cpp' object='libwe_bulk_a-we_tempxmlgendata.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_tempxmlgendata.o `test -f 'we_tempxmlgendata.cpp' || echo '$(srcdir)/'`we_tempxmlgendata.cpp

libwe_bulk_a-we_tempxmlgendata.obj: we_tempxmlgendata.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_tempxmlgendata.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Tpo" -c -o libwe_bulk_a-we_tempxmlgendata.obj `if test -f 'we_tempxmlgendata.cpp'; then $(CYGPATH_W) 'we_tempxmlgendata.cpp'; else $(CYGPATH_W) '$(srcdir)/we_tempxmlgendata.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Tpo" "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_tempxmlgendata.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_tempxmlgendata.cpp' object='libwe_bulk_a-we_tempxmlgendata.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_tempxmlgendata.obj `if test -f 'we_tempxmlgendata.cpp'; then $(CYGPATH_W) 'we_tempxmlgendata.cpp'; else $(CYGPATH_W) '$(srcdir)/we_tempxmlgendata.cpp'; fi`

libwe_bulk_a-we_workers.o: we_workers.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_workers.o -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_workers.Tpo" -c -o libwe_bulk_a-we_workers.o `test -f 'we_workers.cpp' || echo '$(srcdir)/'`we_workers.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_workers.Tpo" "$(DEPDIR)/libwe_bulk_a-we_workers.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_workers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_workers.cpp' object='libwe_bulk_a-we_workers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_workers.o `test -f 'we_workers.cpp' || echo '$(srcdir)/'`we_workers.cpp

libwe_bulk_a-we_workers.obj: we_workers.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libwe_bulk_a-we_workers.obj -MD -MP -MF "$(DEPDIR)/libwe_bulk_a-we_workers.Tpo" -c -o libwe_bulk_a-we_workers.obj `if test -f 'we_workers.cpp'; then $(CYGPATH_W) 'we_workers.cpp'; else $(CYGPATH_W) '$(srcdir)/we_workers.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/libwe_bulk_a-we_workers.Tpo" "$(DEPDIR)/libwe_bulk_a-we_workers.Po"; else rm -f "$(DEPDIR)/libwe_bulk_a-we_workers.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='we_workers.cpp' object='libwe_bulk_a-we_workers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwe_bulk_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libwe_bulk_a-we_workers.obj `if test -f 'we_workers.cpp'; then $(CYGPATH_W) 'we_workers.cpp'; else $(CYGPATH_W) '$(srcdir)/we_workers.cpp'; fi`

cpimport_bin-cpimport.o: cpimport.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cpimport_bin_CXXFLAGS) $(CXXFLAGS) -MT cpimport_bin-cpimport.o -MD -MP -MF "$(DEPDIR)/cpimport_bin-cpimport.Tpo" -c -o cpimport_bin-cpimport.o `test -f 'cpimport.cpp' || echo '$(srcdir)/'`cpimport.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cpimport_bin-cpimport.Tpo" "$(DEPDIR)/cpimport_bin-cpimport.Po"; else rm -f "$(DEPDIR)/cpimport_bin-cpimport.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpimport.cpp' object='cpimport_bin-cpimport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cpimport_bin_CXXFLAGS) $(CXXFLAGS) -c -o cpimport_bin-cpimport.o `test -f 'cpimport.cpp' || echo '$(srcdir)/'`cpimport.cpp

cpimport_bin-cpimport.obj: cpimport.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cpimport_bin_CXXFLAGS) $(CXXFLAGS) -MT cpimport_bin-cpimport.obj -MD -MP -MF "$(DEPDIR)/cpimport_bin-cpimport.Tpo" -c -o cpimport_bin-cpimport.obj `if test -f 'cpimport.cpp'; then $(CYGPATH_W) 'cpimport.cpp'; else $(CYGPATH_W) '$(srcdir)/cpimport.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/cpimport_bin-cpimport.Tpo" "$(DEPDIR)/cpimport_bin-cpimport.Po"; else rm -f "$(DEPDIR)/cpimport_bin-cpimport.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='cpimport.cpp' object='cpimport_bin-cpimport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cpimport_bin_CXXFLAGS) $(CXXFLAGS) -c -o cpimport_bin-cpimport.obj `if test -f 'cpimport.cpp'; then $(CYGPATH_W) 'cpimport.cpp'; else $(CYGPATH_W) '$(srcdir)/cpimport.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am


install_bulk: install

test:

coverage:

leakcheck:

docs:

bootstrap: install-data-am
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
